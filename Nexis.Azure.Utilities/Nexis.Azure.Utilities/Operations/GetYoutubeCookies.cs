using System.CommandLine;
using System.CommandLine.IO;
using System.Text;
using DotNext.IO;
using Microsoft.Playwright;

namespace Nexis.Azure.Utilities;

public record class GetYoutubeCookies(IConsole Console, CancellationToken token) : BrowserOperationBase(Console, token)
{
    public required string TargetFile;

    public override async Task<int> RunAsync(IPlaywright playwright, IBrowser browser, IPage page)
    {
        Console.WriteLine($"Extracting cookies to {TargetFile}");

        Directory.CreateDirectory(Path.GetDirectoryName(TargetFile)!);

        await page.GotoAsync($"https://www.youtube.com/feed/playlists");
        var cookies = await page.Context.CookiesAsync();

        // Write cookies to file in Netscape format.
        using (StreamWriter writer = new StreamWriter(TargetFile, false, new UTF8Encoding(false)))
        {
            writer.WriteLine("# Netscape HTTP Cookie File");
            writer.WriteLine("# This file was generated by Playwright in C#");
            foreach (var cookie in cookies)
            {
                // If the domain starts with a dot, then the 'flag' is TRUE to indicate subdomains are included.
                string flag = cookie.Domain.StartsWith(".") ? "TRUE" : "FALSE";
                string secure = cookie.Secure ? "TRUE" : "FALSE";
                // Expires is a nullable double; if not set, use 0.
                long expiration = Math.Max(0, (long)cookie.Expires);

                // Format: domain, flag, path, secure, expiration, name, value
                writer.WriteLine($"{cookie.Domain}\t{flag}\t{cookie.Path}\t{secure}\t{expiration}\t{cookie.Name}\t{cookie.Value}");
            }
        }

        return 0;
    }
}