name: Build and Release
run-name: R#${{ github.run_number }} (${{ github.event.repository.updated_at }})

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
  push:
    branches:
      - main
      
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up versioning
      shell: pwsh
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $timestamp = Get-Date -Format "yyyyMMdd.${{ github.run_number }}"
        $versionSuffix = "${timestamp}+$(git rev-parse --short HEAD)"

        echo "VersionSuffix=$versionSuffix" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

        $publishRoot = Join-Path -Path $PWD -ChildPath "publish"

        echo "PackageVersionlessOutputPath=$publishRoot" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Publish project (Nexis.Azure.Utilities | Windows)
      run: |
        dotnet publish Nexis.Azure.Utilities/Nexis.Azure.Utilities.csproj -c Release -o publish

    - name: Publish project (Nexis.Azure.Utilities | Linux)
      run: |
        dotnet publish Nexis.Azure.Utilities/Nexis.Azure.Utilities.csproj -c Release -r linux-x64 -o publish

    - name: Publish project (AzureDevops.Pipeline.Utilities | Windows)
      run: |
        dotnet publish AzureDevops.Pipeline.Utilities/AzureDevops.Pipeline.Utilities/AzureDevops.Pipeline.Utilities.csproj -c Release -o publish

    - name: Publish project (AzureDevops.Pipeline.Utilities | Linux)
      run: |
        dotnet publish AzureDevops.Pipeline.Utilities/AzureDevops.Pipeline.Utilities/AzureDevops.Pipeline.Utilities.csproj -r linux-x64 -c Release -o publish

    - name: Pack project (AzureDevops.Pipeline.Utilities)
      run: |
        dotnet pack AzureDevops.Pipeline.Utilities/AzureDevops.Pipeline.Utilities/AzureDevops.Pipeline.Utilities.csproj -c Release

    - name: Pack project (Nexis.Azure.Utilities)
      run: |
        dotnet pack Nexis.Azure.Utilities/Nexis.Azure.Utilities.csproj -c Release

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        name: latest
        tag_name: latest
        prerelease: true
        body: |
          Release version suffix: ${{ env.VersionSuffix }}
        files: |
          publish/nexutils
          publish/nexutils.exe
          publish/azputils
          publish/azputils.exe
          publish/*.nupkg
